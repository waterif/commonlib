/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.gnet.uc.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum OrganizeProtoMessageId implements org.apache.thrift.TEnum {
  DeptUpdate(1),
  DeptTransfer(2),
  PositionUpdate(3),
  EmployeeEntry(4),
  EmployeeLeave(5),
  EmployeeRightsUpdate(6),
  EmployeeJoin(7),
  DeptParentChange(8),
  CompanyJoin(9),
  DeptDelete(10),
  EmployeeEntryConfirm(11),
  EmployeeLeaveConfirm(12),
  DeptTransferConfirm(13),
  EmployeeEntryReject(14),
  EmployeeLeaveReject(15),
  DeptTransferReject(16);

  private final int value;

  private OrganizeProtoMessageId(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static OrganizeProtoMessageId findByValue(int value) { 
    switch (value) {
      case 1:
        return DeptUpdate;
      case 2:
        return DeptTransfer;
      case 3:
        return PositionUpdate;
      case 4:
        return EmployeeEntry;
      case 5:
        return EmployeeLeave;
      case 6:
        return EmployeeRightsUpdate;
      case 7:
        return EmployeeJoin;
      case 8:
        return DeptParentChange;
      case 9:
        return CompanyJoin;
      case 10:
        return DeptDelete;
      case 11:
        return EmployeeEntryConfirm;
      case 12:
        return EmployeeLeaveConfirm;
      case 13:
        return DeptTransferConfirm;
      case 14:
        return EmployeeEntryReject;
      case 15:
        return EmployeeLeaveReject;
      case 16:
        return DeptTransferReject;
      default:
        return null;
    }
  }
}
